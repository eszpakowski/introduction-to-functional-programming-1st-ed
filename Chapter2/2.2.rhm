#lang rhombus/static

/*
  2.2 Booleans
*/

// 2.2.1 ----
check:
  (3 == !(!3)) && #true
  ~is #false

check:
  1 && 1 == 2
  ~is #false

check:
  let x = 10
  (1 < x && x < 100) || x == #true || x == #false
  ~is #true

check:
  #false == (1 < 3)
  ~is #false

// 2.2.2 ----
fun square(x :: Real) :: Real:
  x * x

fun sum_square(x :: Real, y :: Real) :: Real:
  square(x) + square(y)
  
fun sumsqrs(x :: Real, y :: Real, z :: Real) :: Real:
  cond	
  | ((x .<= y) && (x .<= z)): sum_square(y, z)
  | ((y .<= x) && (y .<= z)): sum_square(x, z)
  | ~else: sum_square(x, y)		    

check sumsqrs(1, 2, 3) ~is 13
check sumsqrs(0, -100, 3) ~is 9
check sumsqrs(11, -2, 1) ~is 122
    



